# NOTE: Replace <<region>>, <<account>> and <<api_url>> fields
---
swagger: "2.0"
host: <<api_url>>
basePath: /Prod
info:
  title: RAiD API
  version: "3.0-Alpha"
  description: "The Data LifeCycle Framework (DLCF – www.dlc.edu.au ) has been initiated by five primary  organisations; Australian Access Federation (AAF), Australia’s Academic and Research Network (AARNet), Australian National Data Service (ANDS), National eResearch Collaboration Tools and Resources (NeCTAR) and Research Data Services (RDS).\n\n The DLCF is a nationwide effort to connect research resources and activities such that researchers can make the best use of existing national, state-based, local, and commercial eResearch tools. It aims to provide a simple path to reliable provenance, more effective collaboration across organisations and assist researchers to position themselves to address the growing potential of increasingly open data.\n\n The DLCF will connect critical elements and points in time of the data journey from grant approval through to project finalisation, results publication and archiving. It will leverage existing eResearch investment to provide a flexible and dynamic national framework supporting research.\n\n The Resource and Activity Persistent identifier(RAiD) is the first of the enabling technologies required for the DLCF. This specification document is for the development of the RAiD service and supporting features. Learn more about the RAiD project by visiting the website (https://www.raid.org.au/)."
tags:
- name: "RAiD"
- name: "CORS"
schemes:
- https
paths:
  /:
    get:
      summary: "Get API version metadata"
      tags:
      - "RAiD"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/APIVersionModel"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
      security:
      - CustomAuthorizerJwt: []
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
            responseTemplates:
              application/json: "{\"version\": \"3.0-Alpha\"}"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        passthroughBehavior: "when_no_match"
        type: "mock"
    options:
      tags:
      - "CORS"
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: 200 response
          schema:
            $ref: "#/definitions/Empty"
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Headers:
              type: string
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        type: mock
  /RAiD:
    post:
      summary: "Generate a RAiD with a unique URL handle"
      tags:
      - "RAiD"
      consumes:
      - "application/json"
      produces:
      - application/json
      parameters:
      - in: "body"
        required: false
        name: "body"
        description: "Minting path and optional parameters that are added to the RAiD. 'meta' can take any valid 
        JSON object."
        schema:
          $ref: "#/definitions/RAiDCreateModel"
      responses:
        200:
          description: 200 response
          schema:
            $ref: "#/definitions/RAiDModel"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
      security:
      - CustomAuthorizerJwt: []
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
        uri: arn:aws:apigateway:<<region>>:lambda:path/2015-03-31/functions/arn:aws:lambda:<<region>>:<<account>>:function:${stageVariables.CreateRaidFunction}/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
    options:
      tags:
      - "CORS"
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: 200 response
          schema:
            $ref: "#/definitions/Empty"
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Headers:
              type: string
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        type: mock
  /RAiD/{raidId}:
    get:
      summary: "Return an entire RAiD object with attached metadata and associated providers (optional)"
      tags:
      - "RAiD"
      x-amazon-apigateway-auth:
        type: aws_iam
      produces:
      - application/json
      parameters:
      - name: raidId
        in: path
        required: true
        type: string
        description: "RAiD handle created by minting service. Example: 10378.1/1590366"
      - name: "lazy_load"
        in: "query"
        required: false
        description: "(Default True) Do not include attached RAiD providers unless value is set to false"
        type: "boolean"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/RAiDModel"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
      security:
      - CustomAuthorizerJwt: []
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
        uri: arn:aws:apigateway:<<region>>:lambda:path/2015-03-31/functions/arn:aws:lambda:<<region>>:<<account>>:function:${stageVariables.GetRaidFunction}/invocations
        httpMethod: POST
        type: aws_proxy
    options:
      tags:
      - "CORS"
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: 200 response
          schema:
            $ref: "#/definitions/Empty"
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Headers:
              type: string
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        type: mock
  /RAiD/{raidId}/handle:
    put:
      summary: "Update the content path of a RAiD and mint the new path with the ANDS Service"
      tags:
      - "RAiD"
      x-amazon-apigateway-auth:
        type: aws_iam
      consumes:
      - "application/json"
      produces:
      - application/json
      parameters:
      - name: raidId
        in: path
        required: true
        type: string
        description: "RAiD handle created by minting service. Example: 10378.1/1590366"
      - in: "body"
        required: true
        name: "body"
        description: "New content url path to mint with ANDS"
        schema:
            $ref: "#/definitions/MintRAiDModel"
      responses:
        200:
          description: "200 response"
          schema:
           $ref: "#/definitions/RAiDModel"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
      security:
      - CustomAuthorizerJwt: []
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
        uri: arn:aws:apigateway:<<region>>:lambda:path/2015-03-31/functions/arn:aws:lambda:<<region>>:<<account>>:function:${stageVariables.UpdateRaidContentPathFunction}/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
    options:
      tags:
      - "CORS"
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: 200 response
          schema:
            $ref: "#/definitions/Empty"
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Headers:
              type: string
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        type: mock
  /RAiD/{raidId}/institutions:
    get:
      summary: "Return a list of institutions associated with a RAiD"
      tags:
      - "RAiD"
      x-amazon-apigateway-auth:
        type: aws_iam
      produces:
      - application/json
      parameters:
      - name: raidId
        in: path
        required: true
        type: string
        description: "RAiD handle created by minting service. Example: 10378.1/1590366"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        description: "The maximum number of items to return"
      - name: "ascending"
        in: "query"
        required: false
        type: "boolean"
        description: "Order list by in ascending order (most recently created first)"
      - name: "exclusiveStartKey"
        in: "query"
        required: false
        type: "string"
        description: "Key of the last item returned in a previous query to be used for large lists and pagination"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/InstitutionRAiDsModel"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
      security:
      - CustomAuthorizerJwt: []
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
        uri: arn:aws:apigateway:<<region>>:lambda:path/2015-03-31/functions/arn:aws:lambda:<<region>>:<<account>>:function:${stageVariables.GetRaidInstitutionsFunction}/invocations
        httpMethod: POST
        type: aws_proxy
    post:
      summary: "Associate an institution to a RAiD and set a start date"
      tags:
      - "RAiD"
      x-amazon-apigateway-auth:
        type: aws_iam
      consumes:
      - "application/json"
      produces:
      - application/json
      parameters:
      - name: raidId
        in: path
        required: true
        type: string
        description: "RAiD handle created by minting service. Example: 10378.1/1590366"
      - in: "body"
        required: false
        name: "body"
        description: "Optional parameters that are added when a provider joins a RAiD"
        schema:
          $ref: "#/definitions/CreateInstitutionAssociationModel"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/InstitutionAssociationModel"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
      security:
      - CustomAuthorizerJwt: []
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
        uri: arn:aws:apigateway:<<region>>:lambda:path/2015-03-31/functions/arn:aws:lambda:<<region>>:<<account>>:function:${stageVariables.CreateRaidInstitutionAssociationFunction}/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
    delete:
      summary: "Remove an associated institution from a RAiD by setting an end date to the relationship"
      tags:
      - "RAiD"
      x-amazon-apigateway-auth:
        type: aws_iam
      consumes:
      - "application/json"
      produces:
      - application/json
      parameters:
      - name: raidId
        in: path
        required: true
        type: string
        description: "RAiD handle created by minting service. Example: 10378.1/1590366"
      - in: "body"
        required: false
        name: "body"
        description: "Optional parameters that are used when removing a provider"
        schema:
          $ref: "#/definitions/EndInstitutionAssociationModel"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/InstitutionAssociationModel"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
      security:
      - CustomAuthorizerJwt: []
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
        uri: arn:aws:apigateway:<<region>>:lambda:path/2015-03-31/functions/arn:aws:lambda:<<region>>:<<account>>:function:${stageVariables.EndRaidInstitutionAssociationFunction}/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
    options:
      tags:
      - "CORS"
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: 200 response
          schema:
            $ref: "#/definitions/Empty"
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Headers:
              type: string
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        type: mock
  /RAiD/{raidId}/providers:
    get:
      summary: "Return a list of providers associated with a RAiD"
      tags:
      - "RAiD"
      x-amazon-apigateway-auth:
        type: aws_iam
      produces:
      - application/json
      parameters:
      - name: raidId
        in: path
        required: true
        type: string
        description: "RAiD handle created by minting service. Example: 10378.1/1590366"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        description: "The maximum number of items to return"
      - name: "ascending"
        in: "query"
        required: false
        type: "boolean"
        description: "Order list by in ascending order (most recently created first)"
      - name: "exclusiveStartKey"
        in: "query"
        required: false
        type: "string"
        description: "Key of the last item returned in a previous query to be used for large lists and pagination"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ProviderRAiDsModel"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
      security:
      - CustomAuthorizerJwt: []
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
        uri: arn:aws:apigateway:<<region>>:lambda:path/2015-03-31/functions/arn:aws:lambda:<<region>>:<<account>>:function:${stageVariables.GetRaidProvidersFunction}/invocations
        httpMethod: POST
        type: aws_proxy
    post:
      summary: "Associate a provider to a RAiD and set a start date"
      tags:
      - "RAiD"
      x-amazon-apigateway-auth:
        type: aws_iam
      consumes:
      - "application/json"
      produces:
      - application/json
      parameters:
      - name: raidId
        in: path
        required: true
        type: string
        description: "RAiD handle created by minting service. Example: 10378.1/1590366"
      - in: "body"
        required: false
        name: "body"
        description: "Optional parameters that are added when a provider joins a RAiD"
        schema:
          $ref: "#/definitions/CreateProviderAssociationModel"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ProviderAssociationModel"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
      security:
      - CustomAuthorizerJwt: []
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
        uri: arn:aws:apigateway:<<region>>:lambda:path/2015-03-31/functions/arn:aws:lambda:<<region>>:<<account>>:function:${stageVariables.CreateRaidProviderAssociationFunction}/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
    delete:
      summary: "Remove an associated provider from a RAiD by setting an end date to the relationship"
      tags:
      - "RAiD"
      x-amazon-apigateway-auth:
        type: aws_iam
      consumes:
      - "application/json"
      produces:
      - application/json
      parameters:
      - name: raidId
        in: path
        required: true
        type: string
        description: "RAiD handle created by minting service. Example: 10378.1/1590366"
      - in: "body"
        required: false
        name: "body"
        description: "Optional parameters that are used when removing a provider"
        schema:
          $ref: "#/definitions/EndProviderAssociationModel"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ProviderAssociationModel"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
      security:
      - CustomAuthorizerJwt: []
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
        uri: arn:aws:apigateway:<<region>>:lambda:path/2015-03-31/functions/arn:aws:lambda:<<region>>:<<account>>:function:${stageVariables.EndRaidProviderAssociationFunction}/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
    options:
      tags:
      - "CORS"
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: 200 response
          schema:
            $ref: "#/definitions/Empty"
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Headers:
              type: string
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        type: mock
  /institution/{grid}:
    get:
      summary: "Return a list of RAiDs belonging to the institution in the path"
      tags:
      - "RAiD"
      x-amazon-apigateway-auth:
        type: aws_iam
      produces:
      - application/json
      parameters:
      - name: grid
        in: path
        required: true
        type: string
        description: "Example: grid.1003.2"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        description: "The maximum number of items to return"
      - name: "ascending"
        in: "query"
        required: false
        type: "boolean"
        description: "Order list by in ascending order (most recently created first)"
      - name: "exclusiveStartKey"
        in: "query"
        required: false
        type: "string"
        description: "Key of the last item returned in a previous query to be used for large lists and pagination"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/InstitutionRAiDsModel"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
      security:
      - CustomAuthorizerJwt: []
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
        uri: arn:aws:apigateway:<<region>>:lambda:path/2015-03-31/functions/arn:aws:lambda:<<region>>:<<account>>:function:${stageVariables.GetInstitutionRaidsFunction}/invocations
        httpMethod: POST
        type: aws_proxy
    options:
      tags:
      - "CORS"
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: 200 response
          schema:
            $ref: "#/definitions/Empty"
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Headers:
              type: string
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        type: mock
  /provider/{providerId}:
    get:
      summary: "Return a list of RAiDs belonging to the provider in the path"
      tags:
      - "RAiD"
      x-amazon-apigateway-auth:
        type: aws_iam
      produces:
      - application/json
      parameters:
      - name: providerId
        in: path
        required: true
        type: string
        description: "Example: RDS"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        description: "The maximum number of items to return"
      - name: "ascending"
        in: "query"
        required: false
        type: "boolean"
        description: "Order list by in ascending order (most recently created first)"
      - name: "exclusiveStartKey"
        in: "query"
        required: false
        type: "string"
        description: "Key of the last item returned in a previous query to be used for large lists and pagination"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ProviderRAiDsModel"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
      security:
      - CustomAuthorizerJwt: []
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
        uri: arn:aws:apigateway:<<region>>:lambda:path/2015-03-31/functions/arn:aws:lambda:<<region>>:<<account>>:function:${stageVariables.GetProviderRaidsFunction}/invocations
        httpMethod: POST
        type: aws_proxy
    options:
      tags:
      - "CORS"
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: 200 response
          schema:
            $ref: "#/definitions/Empty"
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Headers:
              type: string
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        type: mock
  /owner:
    get:
      summary: "Return a list of RAiDs that are currently owned to the authenticated key"
      tags:
      - "RAiD"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        description: "The maximum number of items to return"
      - name: "ascending"
        in: "query"
        required: false
        type: "boolean"
        description: "Order list by in ascending order (most recently created first)"
      - name: "exclusiveStartKey"
        in: "query"
        required: false
        type: "string"
        description: "Key of the last item returned in a previous query to be used for large lists and pagination"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/OwnerRAiDsModel"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
      security:
      - CustomAuthorizerJwt: []
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
        uri: arn:aws:apigateway:<<region>>:lambda:path/2015-03-31/functions/arn:aws:lambda:<<region>>:<<account>>:function:${stageVariables.GetOwnerRaidsFunction}/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
    options:
      tags:
      - "CORS"
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: 200 response
          schema:
            $ref: "#/definitions/Empty"
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Headers:
              type: string
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        type: mock
  /owner/{raidId}:
    put:
      summary: "Change the ownership of a RAiD to another provider"
      tags:
      - "RAiD"
      x-amazon-apigateway-auth:
        type: aws_iam
      consumes:
      - "application/json"
      produces:
      - application/json
      parameters:
      - name: raidId
        in: path
        required: true
        type: string
        description: "RAiD handle created by minting service. Example: 10378.1/1590366"
      - in: "body"
        required: true
        name: "body"
        description: "Provider name to transfer ownership too"
        schema:
            $ref: "#/definitions/OwnerAssociationModel"
      responses:
        200:
          description: "200 response"
          schema:
           $ref: "#/definitions/RAiDModel"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
      security:
      - CustomAuthorizerJwt: []
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
        uri: arn:aws:apigateway:<<region>>:lambda:path/2015-03-31/functions/arn:aws:lambda:<<region>>:<<account>>:function:${stageVariables.UpdateRaidOwnerFunction}/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
    options:
      tags:
      - "CORS"
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: 200 response
          schema:
            $ref: "#/definitions/Empty"
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Headers:
              type: string
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        type: mock
securityDefinitions:
  CustomAuthorizerJwt:
    type: "apiKey"
    name: "Authorization"
    in: "header"
    x-amazon-apigateway-authtype: "custom"
    x-amazon-apigateway-authorizer:
      authorizerCredentials: "arn:aws:iam::<<account>>:role/${stageVariables.CustomAuthorizerRole}"
      authorizerResultTtlInSeconds: 300
      identityValidationExpression: "^[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+\\\
          /=]*$"
      authorizerUri: "arn:aws:apigateway:<<region>>:lambda:path/2015-03-31/functions/arn:aws:lambda:<<region>>:<<account>>:function:${stageVariables.CustomAuthorizer}/invocations"
      type: "token"
definitions:
  Empty:
    type: object
    title: Empty Schema
  APIVersionModel:
    type: "object"
    properties:
      version:
        type: "string"
        example: "3.0-Alpha"
    description: "API Version Summary"
  RAiDModel:
    type: "object"
    properties:
      owner:
        type: "string"
        description: "Provider that created the RAiD handle"
        example: "RDS"
      startDate:
        type: "string"
        description: "RAiD start datetime (yyyy-MM-dd hh:mm:ss), which will default to the current datetime if none is supplied"
        example: "2017-09-11 06:07:39"
      endDate:
        type: "string"
        description: "(optional) RAiD end Datetime (yyyy-MM-dd hh:mm:ss)"
        example: "2020-12-20 00:00:00"
      creationDate:
        type: "string"
        description: "RAiD created datetime (yyyy-MM-dd hh:mm:ss)"
        example: "2017-09-11 06:07:39"
      handle:
        type: "string"
        description: "Unique minted ANDS handle"
        example: "10378.1/1590349"
      description:
        type: "string"
        description: "Summary of the RAiD"
      contentPath:
        type: "string"
        description: "URL path minted with ANDS"
        example: "http://myorganisation.org.au/contentlocation"
      providers:
        type: "array"
        description: "(optional) Providers associated to the RAiD"
        items:
          type: "object"
          properties:
            startDate:
              type: "string"
              description: "Datetime the provider associated with the RAiD  (yyyy-MM-dd hh:mm:ss)"
              example: "2017-09-20 12:00:00"
            endDate:
              type: "string"
              description: "(optional) Datetime the provider dissociated with the RAiD  (yyyy-MM-dd hh:mm:ss)"
              example: "2018-12-20 00:00:00"
            provider:
              type: "string"
              description: "Name of provider"
              example: "RDS"
      meta:
        type: "object"
        description: "Object that acts as a document for optional metadata KeyValues"
        properties:
          RelatedRaids:
            type: "array"
            description: "List of related RAiD handles"
            items:
              example: "10378.1/1590363"
              type: "string"
  OwnerRAiDsModel:
    type: "object"
    properties:
      count:
        type: "string"
        description: "Number of items returned"
        example: "30"
      items:
        type: "array"
        description: "(optional) Providers associated to the RAiD"
        items:
          type: "object"
          properties:
            owner:
              type: "string"
              description: "Provider that created the RAiD handle"
              example: "RDS"
            startDate:
              type: "string"
              description: "RAiD start datetime (yyyy-MM-dd hh:mm:ss), which will default to the current datetime if none is supplied"
              example: "2017-09-11 06:07:39"
            creationDate:
              type: "string"
              description: "RAiD created datetime (yyyy-MM-dd hh:mm:ss)"
              example: "2017-09-11 06:07:39"
            handle:
              type: "string"
              description: "Unique minted ANDS handle"
              example: "10378.1/1590349"
      scannedCount:
        type: "string"
        description: "Total number of items that were scanned in the query"
        example: "30"
  ProviderRAiDsModel:
    type: "object"
    properties:
      count:
        type: "string"
        description: "Number of items returned"
        example: "30"
      items:
        type: "array"
        description: "(optional) Providers associated to the RAiD"
        items:
          $ref: "#/definitions/ProviderAssociationModel"
      scannedCount:
        type: "string"
        description: "Total number of items that were scanned in the query"
        example: "30"
  RAiDCreateModel:
    type: "object"
    properties:
      contentPath:
        type: "string"
        description: "URL path minted with ANDS"
        example: "http://myorganisation.org.au/contentlocation"
      description:
        type: "string"
        description: "Summary of the RAiD"
      startDate:
        type: "string"
        description: "RAiD start datetime (yyyy-MM-dd hh:mm:ss), which will default to the current datetime if none is supplied"
        example: "2017-09-11 06:07:39"
      meta:
        type: "object"
        description: "Object that acts as a document for optional metadata KeyValues"
        properties:
          RelatedRaids:
            type: "array"
            description: "List of related RAiD handles"
            items:
              example: "10378.1/1590363"
              type: "string"
  MintRAiDModel:
    type: "object"
    properties:
      contentPath:
        type: "string"
        description: "URL path minted with ANDS"
        example: "http://myorganisation.org.au/contentlocation"
  ProviderAssociationModel:
    type: "object"
    properties:
      startDate:
        type: "string"
        description: "Datetime the provider associated with the RAiD  (yyyy-MM-dd hh:mm:ss)"
        example: "2017-09-20 12:00:00"
      endDate:
        type: "string"
        description: "(optional) Datetime the provider dissociated with the RAiD  (yyyy-MM-dd hh:mm:ss)"
        example: "2018-12-20 00:00:00"
      provider:
        type: "string"
        description: "Name of provider"
        example: "RDS"
      handle:
        type: "string"
        description: "Unique minted ANDS handle"
        example: "10378.1/1590349"
  CreateProviderAssociationModel:
    type: "object"
    properties:
      startDate:
        type: "string"
        description: "Datetime the provider associated with the RAiD  (yyyy-MM-dd hh:mm:ss)"
        example: "2017-09-20 12:00:00"
      provider:
        type: "string"
        description: "Name of provider"
        example: "AAF"
  EndProviderAssociationModel:
    type: "object"
    properties:
      endDate:
        type: "string"
        description: "Datetime the provider dissociated with the RAiD  (yyyy-MM-dd hh:mm:ss)"
        example: "2018-12-20 00:00:00"
      provider:
        type: "string"
        description: "Name of provider"
        example: "AAF"
  OwnerAssociationModel:
    type: "object"
    properties:
      provider:
        type: "string"
        description: "Name of provider"
        example: "AAF"
  InstitutionRAiDsModel:
    type: "object"
    properties:
      count:
        type: "string"
        description: "Number of items returned"
        example: "30"
      items:
        type: "array"
        description: "(optional) Institutions associated to the RAiD"
        items:
          $ref: "#/definitions/InstitutionAssociationModel"
      scannedCount:
        type: "string"
        description: "Total number of items that were scanned in the query"
        example: "30"
  CreateInstitutionAssociationModel:
    type: "object"
    properties:
      startDate:
        type: "string"
        description: "Datetime the institution associated with the RAiD  (yyyy-MM-dd hh:mm:ss)"
        example: "2017-09-20 12:00:00"
      grid:
        type: "string"
        description: "GRID (Global Research Identifier Database) of the Institution"
        example: "grid.1003.2"
  EndInstitutionAssociationModel:
    type: "object"
    properties:
      endDate:
        type: "string"
        description: "Datetime the institution dissociated with the RAiD  (yyyy-MM-dd hh:mm:ss)"
        example: "2018-12-20 00:00:00"
      grid:
        type: "string"
        description: "GRID (Global Research Identifier Database) of the Institution"
        example: "grid.1003.2"
  InstitutionAssociationModel:
    type: "object"
    properties:
      startDate:
        type: "string"
        description: "Datetime the provider associated with the RAiD  (yyyy-MM-dd hh:mm:ss)"
        example: "2017-09-20 12:00:00"
      endDate:
        type: "string"
        description: "(optional) Datetime the provider dissociated with the RAiD  (yyyy-MM-dd hh:mm:ss)"
        example: "2018-12-20 00:00:00"
      grid:
        type: "string"
        description: "GRID (Global Research Identifier Database) of the Institution"
        example: "grid.1003.2"
      handle:
        type: "string"
        description: "Unique minted ANDS handle"
        example: "10378.1/1590349"
  
