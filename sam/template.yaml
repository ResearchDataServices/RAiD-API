# NOTE: Before using this template, replace the <<region>> and <<account>> fields
#       in Lambda integration URI in the swagger file to region and accountId 
#       you are deploying to
#
# To deploy for the first time, and for each update,
# run both of the following commands in order:
#
# aws cloudformation package \
# --template-file template.yaml \
# --output-template-file template-out.yaml \
# --s3-bucket <your-s3-bucket-name>
#
# aws cloudformation deploy \
# --template-file <path-to-file>/template-out.yaml \
# --stack-name <STACK_NAME>  \
# --capabilities CAPABILITY_IAM
---
AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'

Description: RAiD AWS resources

Resources:
  # API
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      DefinitionUri: swagger.yaml
      StageName: Prod
      Variables:
        CustomAuthorizer: !Ref CustomAuthorizer
        CustomAuthorizerRole: !Ref CustomAuthorizerRole

  # Custom Authorizer
  CustomAuthorizer:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../src
      Handler: auth.jwt_validation_handler
      Runtime: python2.7
      Role: !GetAtt CustomAuthorizerRole.Arn
  CustomAuthorizerRole:
      Type: "AWS::IAM::Role"
      Properties:
          Path: "/"
          AssumeRolePolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action:
                  - "sts:AssumeRole"
                Principal:
                  Service:
                    - "lambda.amazonaws.com"
                    - "apigateway.amazonaws.com"
  CustomAuthorizerPolicy:
    Type: "AWS::IAM::Policy"
    DependsOn: [CustomAuthorizerRole]
    Properties: 
      PolicyName: AuthorizerPolicy
      PolicyDocument:
        Statement:
        -
          Effect: Allow
          Action: [
            "lambda:InvokeFunction",
            "lambda:CreateEventSourceMapping",
            "s3:GetObject",
            "s3:GetObjectVersion",
            "s3:GetBucketVersioning"
          ]
          Resource: "*"
      Roles: [!Ref CustomAuthorizerRole]
  
  # Database
  RAiDTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      AttributeDefinitions:
        -
          AttributeName: "handle"
          AttributeType: "S"
        -
          AttributeName: "creationDate"
          AttributeType: "S"
        -
          AttributeName: "owner"
          AttributeType: "S"
      KeySchema:
        -
          AttributeName: "handle"
          KeyType: "HASH"
      GlobalSecondaryIndexes:
        -
          IndexName: "OwnerIndex"
          KeySchema:
            -
              AttributeName: "owner"
              KeyType: "HASH"
            -
              AttributeName: "creationDate"
              KeyType: "RANGE"
          Projection:
            ProjectionType: "INCLUDE"
            NonKeyAttributes:
              - "handle"
              - "startDate"
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5   
  ProviderIndexTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      AttributeDefinitions:
        -
          AttributeName: "provider"
          AttributeType: "S"
        -
          AttributeName: "handle"
          AttributeType: "S"
        -
          AttributeName: "startDate"
          AttributeType: "S"
      KeySchema:
        -
          AttributeName: "provider"
          KeyType: "HASH"
        -
          AttributeName: handle
          KeyType: RANGE
      LocalSecondaryIndexes:
        - 
          IndexName: StartDateIndex
          KeySchema:
            -
              AttributeName: provider
              KeyType: HASH
            -
              AttributeName: startDate
              KeyType: RANGE
          Projection:
              ProjectionType: "INCLUDE"
              NonKeyAttributes:
                - "handle"
                - "endDate"
      GlobalSecondaryIndexes:
        -
          IndexName: "HandleProviderIndex"
          KeySchema:
            -
              AttributeName: "handle"
              KeyType: "HASH"
            -
              AttributeName: "provider"
              KeyType: "RANGE"
          Projection:
            ProjectionType: "INCLUDE"
            NonKeyAttributes:
              - "startDate"
              - "endDate"
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

Outputs:
  RaidDB:
    Value: !Ref 'RAiDTable'
  RaidProviderDB:
    Value: !Ref 'ProviderIndexTable'
